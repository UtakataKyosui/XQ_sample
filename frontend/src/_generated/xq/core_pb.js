// source: xq/core.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require("google-protobuf");
var goog = jspb;
var global =
  (typeof globalThis !== "undefined" && globalThis) ||
  (typeof window !== "undefined" && window) ||
  (typeof global !== "undefined" && global) ||
  (typeof self !== "undefined" && self) ||
  function () {
    return this;
  }.call(null) ||
  Function("return this")();

var google_protobuf_timestamp_pb = require("google-protobuf/google/protobuf/timestamp_pb.js");
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol("proto.xq.CreatePostRequest", null, global);
goog.exportSymbol("proto.xq.CreatePostResponse", null, global);
goog.exportSymbol("proto.xq.CreateUserRequest", null, global);
goog.exportSymbol("proto.xq.CreateUserResponse", null, global);
goog.exportSymbol("proto.xq.GetPostsRequest", null, global);
goog.exportSymbol("proto.xq.GetPostsResponse", null, global);
goog.exportSymbol("proto.xq.GetUserRequest", null, global);
goog.exportSymbol("proto.xq.GetUserResponse", null, global);
goog.exportSymbol("proto.xq.Post", null, global);
goog.exportSymbol("proto.xq.Post.Attachment", null, global);
goog.exportSymbol("proto.xq.StreamEvent", null, global);
goog.exportSymbol("proto.xq.StreamEvent.EventDataCase", null, global);
goog.exportSymbol("proto.xq.StreamEventsRequest", null, global);
goog.exportSymbol("proto.xq.User", null, global);
goog.exportSymbol("proto.xq.Visibility", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xq.User = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xq.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xq.User.displayName = "proto.xq.User";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xq.Post = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.xq.Post.repeatedFields_,
    null,
  );
};
goog.inherits(proto.xq.Post, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xq.Post.displayName = "proto.xq.Post";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xq.Post.Attachment = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xq.Post.Attachment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xq.Post.Attachment.displayName = "proto.xq.Post.Attachment";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xq.CreateUserRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xq.CreateUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xq.CreateUserRequest.displayName = "proto.xq.CreateUserRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xq.CreateUserResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xq.CreateUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xq.CreateUserResponse.displayName = "proto.xq.CreateUserResponse";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xq.GetUserRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xq.GetUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xq.GetUserRequest.displayName = "proto.xq.GetUserRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xq.GetUserResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xq.GetUserResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xq.GetUserResponse.displayName = "proto.xq.GetUserResponse";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xq.CreatePostRequest = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.xq.CreatePostRequest.repeatedFields_,
    null,
  );
};
goog.inherits(proto.xq.CreatePostRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xq.CreatePostRequest.displayName = "proto.xq.CreatePostRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xq.CreatePostResponse = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xq.CreatePostResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xq.CreatePostResponse.displayName = "proto.xq.CreatePostResponse";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xq.GetPostsRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.xq.GetPostsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xq.GetPostsRequest.displayName = "proto.xq.GetPostsRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xq.GetPostsResponse = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.xq.GetPostsResponse.repeatedFields_,
    null,
  );
};
goog.inherits(proto.xq.GetPostsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xq.GetPostsResponse.displayName = "proto.xq.GetPostsResponse";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xq.StreamEventsRequest = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    proto.xq.StreamEventsRequest.repeatedFields_,
    null,
  );
};
goog.inherits(proto.xq.StreamEventsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xq.StreamEventsRequest.displayName = "proto.xq.StreamEventsRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.xq.StreamEvent = function (opt_data) {
  jspb.Message.initialize(
    this,
    opt_data,
    0,
    -1,
    null,
    proto.xq.StreamEvent.oneofGroups_,
  );
};
goog.inherits(proto.xq.StreamEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.xq.StreamEvent.displayName = "proto.xq.StreamEvent";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.xq.User.prototype.toObject = function (opt_includeInstance) {
    return proto.xq.User.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.xq.User} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.xq.User.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, 0),
        username: jspb.Message.getFieldWithDefault(msg, 2, ""),
        displayName: jspb.Message.getFieldWithDefault(msg, 3, ""),
        bio: jspb.Message.getFieldWithDefault(msg, 4, ""),
        avatarUrl: jspb.Message.getFieldWithDefault(msg, 5, ""),
        createdAt:
          (f = msg.getCreatedAt()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        updatedAt:
          (f = msg.getUpdatedAt()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xq.User}
 */
proto.xq.User.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xq.User();
  return proto.xq.User.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xq.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xq.User}
 */
proto.xq.User.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setUsername(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setDisplayName(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setBio(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setAvatarUrl(value);
        break;
      case 6:
        var value = new google_protobuf_timestamp_pb.Timestamp();
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader,
        );
        msg.setCreatedAt(value);
        break;
      case 7:
        var value = new google_protobuf_timestamp_pb.Timestamp();
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader,
        );
        msg.setUpdatedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xq.User.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.xq.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xq.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xq.User.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(1, f);
  }
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getBio();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getAvatarUrl();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter,
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter,
    );
  }
};

/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.xq.User.prototype.getId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.xq.User} returns this
 */
proto.xq.User.prototype.setId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string username = 2;
 * @return {string}
 */
proto.xq.User.prototype.getUsername = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.xq.User} returns this
 */
proto.xq.User.prototype.setUsername = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string display_name = 3;
 * @return {string}
 */
proto.xq.User.prototype.getDisplayName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};

/**
 * @param {string} value
 * @return {!proto.xq.User} returns this
 */
proto.xq.User.prototype.setDisplayName = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string bio = 4;
 * @return {string}
 */
proto.xq.User.prototype.getBio = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};

/**
 * @param {string} value
 * @return {!proto.xq.User} returns this
 */
proto.xq.User.prototype.setBio = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string avatar_url = 5;
 * @return {string}
 */
proto.xq.User.prototype.getAvatarUrl = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};

/**
 * @param {string} value
 * @return {!proto.xq.User} returns this
 */
proto.xq.User.prototype.setAvatarUrl = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional google.protobuf.Timestamp created_at = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xq.User.prototype.getCreatedAt = function () {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(
      this,
      google_protobuf_timestamp_pb.Timestamp,
      6,
    )
  );
};

/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.xq.User} returns this
 */
proto.xq.User.prototype.setCreatedAt = function (value) {
  return jspb.Message.setWrapperField(this, 6, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.xq.User} returns this
 */
proto.xq.User.prototype.clearCreatedAt = function () {
  return this.setCreatedAt(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xq.User.prototype.hasCreatedAt = function () {
  return jspb.Message.getField(this, 6) != null;
};

/**
 * optional google.protobuf.Timestamp updated_at = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xq.User.prototype.getUpdatedAt = function () {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(
      this,
      google_protobuf_timestamp_pb.Timestamp,
      7,
    )
  );
};

/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.xq.User} returns this
 */
proto.xq.User.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setWrapperField(this, 7, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.xq.User} returns this
 */
proto.xq.User.prototype.clearUpdatedAt = function () {
  return this.setUpdatedAt(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xq.User.prototype.hasUpdatedAt = function () {
  return jspb.Message.getField(this, 7) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xq.Post.repeatedFields_ = [8, 9, 10];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.xq.Post.prototype.toObject = function (opt_includeInstance) {
    return proto.xq.Post.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.xq.Post} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.xq.Post.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, 0),
        authorId: jspb.Message.getFieldWithDefault(msg, 2, 0),
        text: jspb.Message.getFieldWithDefault(msg, 3, ""),
        cw: jspb.Message.getFieldWithDefault(msg, 4, ""),
        visibility: jspb.Message.getFieldWithDefault(msg, 5, 0),
        replyToId: jspb.Message.getFieldWithDefault(msg, 6, 0),
        repostOfId: jspb.Message.getFieldWithDefault(msg, 7, 0),
        tagsList:
          (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
        mentionsList:
          (f = jspb.Message.getRepeatedField(msg, 9)) == null ? undefined : f,
        attachmentsList: jspb.Message.toObjectList(
          msg.getAttachmentsList(),
          proto.xq.Post.Attachment.toObject,
          includeInstance,
        ),
        createdAt:
          (f = msg.getCreatedAt()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        updatedAt:
          (f = msg.getUpdatedAt()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
        editedAt:
          (f = msg.getEditedAt()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xq.Post}
 */
proto.xq.Post.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xq.Post();
  return proto.xq.Post.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xq.Post} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xq.Post}
 */
proto.xq.Post.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setAuthorId(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setText(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setCw(value);
        break;
      case 5:
        var value = /** @type {!proto.xq.Visibility} */ (reader.readEnum());
        msg.setVisibility(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setReplyToId(value);
        break;
      case 7:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setRepostOfId(value);
        break;
      case 8:
        var value = /** @type {string} */ (reader.readString());
        msg.addTags(value);
        break;
      case 9:
        var values = /** @type {!Array<number>} */ (
          reader.isDelimited()
            ? reader.readPackedUint64()
            : [reader.readUint64()]
        );
        for (var i = 0; i < values.length; i++) {
          msg.addMentions(values[i]);
        }
        break;
      case 10:
        var value = new proto.xq.Post.Attachment();
        reader.readMessage(
          value,
          proto.xq.Post.Attachment.deserializeBinaryFromReader,
        );
        msg.addAttachments(value);
        break;
      case 20:
        var value = new google_protobuf_timestamp_pb.Timestamp();
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader,
        );
        msg.setCreatedAt(value);
        break;
      case 21:
        var value = new google_protobuf_timestamp_pb.Timestamp();
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader,
        );
        msg.setUpdatedAt(value);
        break;
      case 22:
        var value = new google_protobuf_timestamp_pb.Timestamp();
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader,
        );
        msg.setEditedAt(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xq.Post.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.xq.Post.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xq.Post} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xq.Post.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(1, f);
  }
  f = message.getAuthorId();
  if (f !== 0) {
    writer.writeUint64(2, f);
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getCw();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getVisibility();
  if (f !== 0.0) {
    writer.writeEnum(5, f);
  }
  f = message.getReplyToId();
  if (f !== 0) {
    writer.writeUint64(6, f);
  }
  f = message.getRepostOfId();
  if (f !== 0) {
    writer.writeUint64(7, f);
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(8, f);
  }
  f = message.getMentionsList();
  if (f.length > 0) {
    writer.writePackedUint64(9, f);
  }
  f = message.getAttachmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.xq.Post.Attachment.serializeBinaryToWriter,
    );
  }
  f = message.getCreatedAt();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter,
    );
  }
  f = message.getUpdatedAt();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter,
    );
  }
  f = message.getEditedAt();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter,
    );
  }
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.xq.Post.Attachment.prototype.toObject = function (opt_includeInstance) {
    return proto.xq.Post.Attachment.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.xq.Post.Attachment} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.xq.Post.Attachment.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        url: jspb.Message.getFieldWithDefault(msg, 1, ""),
        mime: jspb.Message.getFieldWithDefault(msg, 2, ""),
        sizeBytes: jspb.Message.getFieldWithDefault(msg, 3, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xq.Post.Attachment}
 */
proto.xq.Post.Attachment.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xq.Post.Attachment();
  return proto.xq.Post.Attachment.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xq.Post.Attachment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xq.Post.Attachment}
 */
proto.xq.Post.Attachment.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setUrl(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setMime(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setSizeBytes(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xq.Post.Attachment.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.xq.Post.Attachment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xq.Post.Attachment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xq.Post.Attachment.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getMime();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getSizeBytes();
  if (f !== 0) {
    writer.writeUint32(3, f);
  }
};

/**
 * optional string url = 1;
 * @return {string}
 */
proto.xq.Post.Attachment.prototype.getUrl = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.xq.Post.Attachment} returns this
 */
proto.xq.Post.Attachment.prototype.setUrl = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string mime = 2;
 * @return {string}
 */
proto.xq.Post.Attachment.prototype.getMime = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.xq.Post.Attachment} returns this
 */
proto.xq.Post.Attachment.prototype.setMime = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional uint32 size_bytes = 3;
 * @return {number}
 */
proto.xq.Post.Attachment.prototype.getSizeBytes = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.xq.Post.Attachment} returns this
 */
proto.xq.Post.Attachment.prototype.setSizeBytes = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.xq.Post.prototype.getId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.setId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional uint64 author_id = 2;
 * @return {number}
 */
proto.xq.Post.prototype.getAuthorId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.setAuthorId = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional string text = 3;
 * @return {string}
 */
proto.xq.Post.prototype.getText = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};

/**
 * @param {string} value
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.setText = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string cw = 4;
 * @return {string}
 */
proto.xq.Post.prototype.getCw = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};

/**
 * @param {string} value
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.setCw = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional Visibility visibility = 5;
 * @return {!proto.xq.Visibility}
 */
proto.xq.Post.prototype.getVisibility = function () {
  return /** @type {!proto.xq.Visibility} */ (
    jspb.Message.getFieldWithDefault(this, 5, 0)
  );
};

/**
 * @param {!proto.xq.Visibility} value
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.setVisibility = function (value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};

/**
 * optional uint64 reply_to_id = 6;
 * @return {number}
 */
proto.xq.Post.prototype.getReplyToId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};

/**
 * @param {number} value
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.setReplyToId = function (value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};

/**
 * optional uint64 repost_of_id = 7;
 * @return {number}
 */
proto.xq.Post.prototype.getRepostOfId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};

/**
 * @param {number} value
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.setRepostOfId = function (value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};

/**
 * repeated string tags = 8;
 * @return {!Array<string>}
 */
proto.xq.Post.prototype.getTagsList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.setTagsList = function (value) {
  return jspb.Message.setField(this, 8, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.addTags = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.clearTagsList = function () {
  return this.setTagsList([]);
};

/**
 * repeated uint64 mentions = 9;
 * @return {!Array<number>}
 */
proto.xq.Post.prototype.getMentionsList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 9));
};

/**
 * @param {!Array<number>} value
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.setMentionsList = function (value) {
  return jspb.Message.setField(this, 9, value || []);
};

/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.addMentions = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.clearMentionsList = function () {
  return this.setMentionsList([]);
};

/**
 * repeated Attachment attachments = 10;
 * @return {!Array<!proto.xq.Post.Attachment>}
 */
proto.xq.Post.prototype.getAttachmentsList = function () {
  return /** @type{!Array<!proto.xq.Post.Attachment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xq.Post.Attachment, 10)
  );
};

/**
 * @param {!Array<!proto.xq.Post.Attachment>} value
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.setAttachmentsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 10, value);
};

/**
 * @param {!proto.xq.Post.Attachment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xq.Post.Attachment}
 */
proto.xq.Post.prototype.addAttachments = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    10,
    opt_value,
    proto.xq.Post.Attachment,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.clearAttachmentsList = function () {
  return this.setAttachmentsList([]);
};

/**
 * optional google.protobuf.Timestamp created_at = 20;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xq.Post.prototype.getCreatedAt = function () {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(
      this,
      google_protobuf_timestamp_pb.Timestamp,
      20,
    )
  );
};

/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.setCreatedAt = function (value) {
  return jspb.Message.setWrapperField(this, 20, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.clearCreatedAt = function () {
  return this.setCreatedAt(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xq.Post.prototype.hasCreatedAt = function () {
  return jspb.Message.getField(this, 20) != null;
};

/**
 * optional google.protobuf.Timestamp updated_at = 21;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xq.Post.prototype.getUpdatedAt = function () {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(
      this,
      google_protobuf_timestamp_pb.Timestamp,
      21,
    )
  );
};

/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.setUpdatedAt = function (value) {
  return jspb.Message.setWrapperField(this, 21, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.clearUpdatedAt = function () {
  return this.setUpdatedAt(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xq.Post.prototype.hasUpdatedAt = function () {
  return jspb.Message.getField(this, 21) != null;
};

/**
 * optional google.protobuf.Timestamp edited_at = 22;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xq.Post.prototype.getEditedAt = function () {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(
      this,
      google_protobuf_timestamp_pb.Timestamp,
      22,
    )
  );
};

/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.setEditedAt = function (value) {
  return jspb.Message.setWrapperField(this, 22, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.xq.Post} returns this
 */
proto.xq.Post.prototype.clearEditedAt = function () {
  return this.setEditedAt(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xq.Post.prototype.hasEditedAt = function () {
  return jspb.Message.getField(this, 22) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.xq.CreateUserRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.xq.CreateUserRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.xq.CreateUserRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.xq.CreateUserRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        username: jspb.Message.getFieldWithDefault(msg, 1, ""),
        displayName: jspb.Message.getFieldWithDefault(msg, 2, ""),
        bio: jspb.Message.getFieldWithDefault(msg, 3, ""),
        avatarUrl: jspb.Message.getFieldWithDefault(msg, 4, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xq.CreateUserRequest}
 */
proto.xq.CreateUserRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xq.CreateUserRequest();
  return proto.xq.CreateUserRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xq.CreateUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xq.CreateUserRequest}
 */
proto.xq.CreateUserRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setUsername(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setDisplayName(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setBio(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setAvatarUrl(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xq.CreateUserRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.xq.CreateUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xq.CreateUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xq.CreateUserRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getUsername();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getBio();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getAvatarUrl();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
};

/**
 * optional string username = 1;
 * @return {string}
 */
proto.xq.CreateUserRequest.prototype.getUsername = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.xq.CreateUserRequest} returns this
 */
proto.xq.CreateUserRequest.prototype.setUsername = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string display_name = 2;
 * @return {string}
 */
proto.xq.CreateUserRequest.prototype.getDisplayName = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.xq.CreateUserRequest} returns this
 */
proto.xq.CreateUserRequest.prototype.setDisplayName = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string bio = 3;
 * @return {string}
 */
proto.xq.CreateUserRequest.prototype.getBio = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};

/**
 * @param {string} value
 * @return {!proto.xq.CreateUserRequest} returns this
 */
proto.xq.CreateUserRequest.prototype.setBio = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string avatar_url = 4;
 * @return {string}
 */
proto.xq.CreateUserRequest.prototype.getAvatarUrl = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};

/**
 * @param {string} value
 * @return {!proto.xq.CreateUserRequest} returns this
 */
proto.xq.CreateUserRequest.prototype.setAvatarUrl = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.xq.CreateUserResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.xq.CreateUserResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.xq.CreateUserResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.xq.CreateUserResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        user: (f = msg.getUser()) && proto.xq.User.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xq.CreateUserResponse}
 */
proto.xq.CreateUserResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xq.CreateUserResponse();
  return proto.xq.CreateUserResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xq.CreateUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xq.CreateUserResponse}
 */
proto.xq.CreateUserResponse.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.xq.User();
        reader.readMessage(value, proto.xq.User.deserializeBinaryFromReader);
        msg.setUser(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xq.CreateUserResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.xq.CreateUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xq.CreateUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xq.CreateUserResponse.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(1, f, proto.xq.User.serializeBinaryToWriter);
  }
};

/**
 * optional User user = 1;
 * @return {?proto.xq.User}
 */
proto.xq.CreateUserResponse.prototype.getUser = function () {
  return /** @type{?proto.xq.User} */ (
    jspb.Message.getWrapperField(this, proto.xq.User, 1)
  );
};

/**
 * @param {?proto.xq.User|undefined} value
 * @return {!proto.xq.CreateUserResponse} returns this
 */
proto.xq.CreateUserResponse.prototype.setUser = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.xq.CreateUserResponse} returns this
 */
proto.xq.CreateUserResponse.prototype.clearUser = function () {
  return this.setUser(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xq.CreateUserResponse.prototype.hasUser = function () {
  return jspb.Message.getField(this, 1) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.xq.GetUserRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.xq.GetUserRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.xq.GetUserRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.xq.GetUserRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        id: jspb.Message.getFieldWithDefault(msg, 1, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xq.GetUserRequest}
 */
proto.xq.GetUserRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xq.GetUserRequest();
  return proto.xq.GetUserRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xq.GetUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xq.GetUserRequest}
 */
proto.xq.GetUserRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xq.GetUserRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.xq.GetUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xq.GetUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xq.GetUserRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(1, f);
  }
};

/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.xq.GetUserRequest.prototype.getId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.xq.GetUserRequest} returns this
 */
proto.xq.GetUserRequest.prototype.setId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.xq.GetUserResponse.prototype.toObject = function (opt_includeInstance) {
    return proto.xq.GetUserResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.xq.GetUserResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.xq.GetUserResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        user: (f = msg.getUser()) && proto.xq.User.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xq.GetUserResponse}
 */
proto.xq.GetUserResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xq.GetUserResponse();
  return proto.xq.GetUserResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xq.GetUserResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xq.GetUserResponse}
 */
proto.xq.GetUserResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.xq.User();
        reader.readMessage(value, proto.xq.User.deserializeBinaryFromReader);
        msg.setUser(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xq.GetUserResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.xq.GetUserResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xq.GetUserResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xq.GetUserResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(1, f, proto.xq.User.serializeBinaryToWriter);
  }
};

/**
 * optional User user = 1;
 * @return {?proto.xq.User}
 */
proto.xq.GetUserResponse.prototype.getUser = function () {
  return /** @type{?proto.xq.User} */ (
    jspb.Message.getWrapperField(this, proto.xq.User, 1)
  );
};

/**
 * @param {?proto.xq.User|undefined} value
 * @return {!proto.xq.GetUserResponse} returns this
 */
proto.xq.GetUserResponse.prototype.setUser = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.xq.GetUserResponse} returns this
 */
proto.xq.GetUserResponse.prototype.clearUser = function () {
  return this.setUser(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xq.GetUserResponse.prototype.hasUser = function () {
  return jspb.Message.getField(this, 1) != null;
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xq.CreatePostRequest.repeatedFields_ = [7, 8, 9];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.xq.CreatePostRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.xq.CreatePostRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.xq.CreatePostRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.xq.CreatePostRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        authorId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        text: jspb.Message.getFieldWithDefault(msg, 2, ""),
        cw: jspb.Message.getFieldWithDefault(msg, 3, ""),
        visibility: jspb.Message.getFieldWithDefault(msg, 4, 0),
        replyToId: jspb.Message.getFieldWithDefault(msg, 5, 0),
        repostOfId: jspb.Message.getFieldWithDefault(msg, 6, 0),
        tagsList:
          (f = jspb.Message.getRepeatedField(msg, 7)) == null ? undefined : f,
        mentionsList:
          (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
        attachmentsList: jspb.Message.toObjectList(
          msg.getAttachmentsList(),
          proto.xq.Post.Attachment.toObject,
          includeInstance,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xq.CreatePostRequest}
 */
proto.xq.CreatePostRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xq.CreatePostRequest();
  return proto.xq.CreatePostRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xq.CreatePostRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xq.CreatePostRequest}
 */
proto.xq.CreatePostRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setAuthorId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setText(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setCw(value);
        break;
      case 4:
        var value = /** @type {!proto.xq.Visibility} */ (reader.readEnum());
        msg.setVisibility(value);
        break;
      case 5:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setReplyToId(value);
        break;
      case 6:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setRepostOfId(value);
        break;
      case 7:
        var value = /** @type {string} */ (reader.readString());
        msg.addTags(value);
        break;
      case 8:
        var values = /** @type {!Array<number>} */ (
          reader.isDelimited()
            ? reader.readPackedUint64()
            : [reader.readUint64()]
        );
        for (var i = 0; i < values.length; i++) {
          msg.addMentions(values[i]);
        }
        break;
      case 9:
        var value = new proto.xq.Post.Attachment();
        reader.readMessage(
          value,
          proto.xq.Post.Attachment.deserializeBinaryFromReader,
        );
        msg.addAttachments(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xq.CreatePostRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.xq.CreatePostRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xq.CreatePostRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xq.CreatePostRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getAuthorId();
  if (f !== 0) {
    writer.writeUint64(1, f);
  }
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getCw();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getVisibility();
  if (f !== 0.0) {
    writer.writeEnum(4, f);
  }
  f = message.getReplyToId();
  if (f !== 0) {
    writer.writeUint64(5, f);
  }
  f = message.getRepostOfId();
  if (f !== 0) {
    writer.writeUint64(6, f);
  }
  f = message.getTagsList();
  if (f.length > 0) {
    writer.writeRepeatedString(7, f);
  }
  f = message.getMentionsList();
  if (f.length > 0) {
    writer.writePackedUint64(8, f);
  }
  f = message.getAttachmentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.xq.Post.Attachment.serializeBinaryToWriter,
    );
  }
};

/**
 * optional uint64 author_id = 1;
 * @return {number}
 */
proto.xq.CreatePostRequest.prototype.getAuthorId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.xq.CreatePostRequest} returns this
 */
proto.xq.CreatePostRequest.prototype.setAuthorId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional string text = 2;
 * @return {string}
 */
proto.xq.CreatePostRequest.prototype.getText = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.xq.CreatePostRequest} returns this
 */
proto.xq.CreatePostRequest.prototype.setText = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string cw = 3;
 * @return {string}
 */
proto.xq.CreatePostRequest.prototype.getCw = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};

/**
 * @param {string} value
 * @return {!proto.xq.CreatePostRequest} returns this
 */
proto.xq.CreatePostRequest.prototype.setCw = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional Visibility visibility = 4;
 * @return {!proto.xq.Visibility}
 */
proto.xq.CreatePostRequest.prototype.getVisibility = function () {
  return /** @type {!proto.xq.Visibility} */ (
    jspb.Message.getFieldWithDefault(this, 4, 0)
  );
};

/**
 * @param {!proto.xq.Visibility} value
 * @return {!proto.xq.CreatePostRequest} returns this
 */
proto.xq.CreatePostRequest.prototype.setVisibility = function (value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};

/**
 * optional uint64 reply_to_id = 5;
 * @return {number}
 */
proto.xq.CreatePostRequest.prototype.getReplyToId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};

/**
 * @param {number} value
 * @return {!proto.xq.CreatePostRequest} returns this
 */
proto.xq.CreatePostRequest.prototype.setReplyToId = function (value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};

/**
 * optional uint64 repost_of_id = 6;
 * @return {number}
 */
proto.xq.CreatePostRequest.prototype.getRepostOfId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};

/**
 * @param {number} value
 * @return {!proto.xq.CreatePostRequest} returns this
 */
proto.xq.CreatePostRequest.prototype.setRepostOfId = function (value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};

/**
 * repeated string tags = 7;
 * @return {!Array<string>}
 */
proto.xq.CreatePostRequest.prototype.getTagsList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.xq.CreatePostRequest} returns this
 */
proto.xq.CreatePostRequest.prototype.setTagsList = function (value) {
  return jspb.Message.setField(this, 7, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.xq.CreatePostRequest} returns this
 */
proto.xq.CreatePostRequest.prototype.addTags = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xq.CreatePostRequest} returns this
 */
proto.xq.CreatePostRequest.prototype.clearTagsList = function () {
  return this.setTagsList([]);
};

/**
 * repeated uint64 mentions = 8;
 * @return {!Array<number>}
 */
proto.xq.CreatePostRequest.prototype.getMentionsList = function () {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 8));
};

/**
 * @param {!Array<number>} value
 * @return {!proto.xq.CreatePostRequest} returns this
 */
proto.xq.CreatePostRequest.prototype.setMentionsList = function (value) {
  return jspb.Message.setField(this, 8, value || []);
};

/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.xq.CreatePostRequest} returns this
 */
proto.xq.CreatePostRequest.prototype.addMentions = function (value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xq.CreatePostRequest} returns this
 */
proto.xq.CreatePostRequest.prototype.clearMentionsList = function () {
  return this.setMentionsList([]);
};

/**
 * repeated Post.Attachment attachments = 9;
 * @return {!Array<!proto.xq.Post.Attachment>}
 */
proto.xq.CreatePostRequest.prototype.getAttachmentsList = function () {
  return /** @type{!Array<!proto.xq.Post.Attachment>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xq.Post.Attachment, 9)
  );
};

/**
 * @param {!Array<!proto.xq.Post.Attachment>} value
 * @return {!proto.xq.CreatePostRequest} returns this
 */
proto.xq.CreatePostRequest.prototype.setAttachmentsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};

/**
 * @param {!proto.xq.Post.Attachment=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xq.Post.Attachment}
 */
proto.xq.CreatePostRequest.prototype.addAttachments = function (
  opt_value,
  opt_index,
) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    9,
    opt_value,
    proto.xq.Post.Attachment,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xq.CreatePostRequest} returns this
 */
proto.xq.CreatePostRequest.prototype.clearAttachmentsList = function () {
  return this.setAttachmentsList([]);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.xq.CreatePostResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.xq.CreatePostResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.xq.CreatePostResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.xq.CreatePostResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        post: (f = msg.getPost()) && proto.xq.Post.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xq.CreatePostResponse}
 */
proto.xq.CreatePostResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xq.CreatePostResponse();
  return proto.xq.CreatePostResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xq.CreatePostResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xq.CreatePostResponse}
 */
proto.xq.CreatePostResponse.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.xq.Post();
        reader.readMessage(value, proto.xq.Post.deserializeBinaryFromReader);
        msg.setPost(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xq.CreatePostResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.xq.CreatePostResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xq.CreatePostResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xq.CreatePostResponse.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getPost();
  if (f != null) {
    writer.writeMessage(1, f, proto.xq.Post.serializeBinaryToWriter);
  }
};

/**
 * optional Post post = 1;
 * @return {?proto.xq.Post}
 */
proto.xq.CreatePostResponse.prototype.getPost = function () {
  return /** @type{?proto.xq.Post} */ (
    jspb.Message.getWrapperField(this, proto.xq.Post, 1)
  );
};

/**
 * @param {?proto.xq.Post|undefined} value
 * @return {!proto.xq.CreatePostResponse} returns this
 */
proto.xq.CreatePostResponse.prototype.setPost = function (value) {
  return jspb.Message.setWrapperField(this, 1, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.xq.CreatePostResponse} returns this
 */
proto.xq.CreatePostResponse.prototype.clearPost = function () {
  return this.setPost(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xq.CreatePostResponse.prototype.hasPost = function () {
  return jspb.Message.getField(this, 1) != null;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.xq.GetPostsRequest.prototype.toObject = function (opt_includeInstance) {
    return proto.xq.GetPostsRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.xq.GetPostsRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.xq.GetPostsRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        userId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
        beforeId: jspb.Message.getFieldWithDefault(msg, 3, 0),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xq.GetPostsRequest}
 */
proto.xq.GetPostsRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xq.GetPostsRequest();
  return proto.xq.GetPostsRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xq.GetPostsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xq.GetPostsRequest}
 */
proto.xq.GetPostsRequest.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setUserId(value);
        break;
      case 2:
        var value = /** @type {number} */ (reader.readUint32());
        msg.setLimit(value);
        break;
      case 3:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setBeforeId(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xq.GetPostsRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.xq.GetPostsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xq.GetPostsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xq.GetPostsRequest.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeUint64(1, f);
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint32(2, f);
  }
  f = message.getBeforeId();
  if (f !== 0) {
    writer.writeUint64(3, f);
  }
};

/**
 * optional uint64 user_id = 1;
 * @return {number}
 */
proto.xq.GetPostsRequest.prototype.getUserId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.xq.GetPostsRequest} returns this
 */
proto.xq.GetPostsRequest.prototype.setUserId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * optional uint32 limit = 2;
 * @return {number}
 */
proto.xq.GetPostsRequest.prototype.getLimit = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};

/**
 * @param {number} value
 * @return {!proto.xq.GetPostsRequest} returns this
 */
proto.xq.GetPostsRequest.prototype.setLimit = function (value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};

/**
 * optional uint64 before_id = 3;
 * @return {number}
 */
proto.xq.GetPostsRequest.prototype.getBeforeId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};

/**
 * @param {number} value
 * @return {!proto.xq.GetPostsRequest} returns this
 */
proto.xq.GetPostsRequest.prototype.setBeforeId = function (value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xq.GetPostsResponse.repeatedFields_ = [1];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.xq.GetPostsResponse.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.xq.GetPostsResponse.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.xq.GetPostsResponse} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.xq.GetPostsResponse.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        postsList: jspb.Message.toObjectList(
          msg.getPostsList(),
          proto.xq.Post.toObject,
          includeInstance,
        ),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xq.GetPostsResponse}
 */
proto.xq.GetPostsResponse.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xq.GetPostsResponse();
  return proto.xq.GetPostsResponse.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xq.GetPostsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xq.GetPostsResponse}
 */
proto.xq.GetPostsResponse.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = new proto.xq.Post();
        reader.readMessage(value, proto.xq.Post.deserializeBinaryFromReader);
        msg.addPosts(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xq.GetPostsResponse.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.xq.GetPostsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xq.GetPostsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xq.GetPostsResponse.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getPostsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(1, f, proto.xq.Post.serializeBinaryToWriter);
  }
};

/**
 * repeated Post posts = 1;
 * @return {!Array<!proto.xq.Post>}
 */
proto.xq.GetPostsResponse.prototype.getPostsList = function () {
  return /** @type{!Array<!proto.xq.Post>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.xq.Post, 1)
  );
};

/**
 * @param {!Array<!proto.xq.Post>} value
 * @return {!proto.xq.GetPostsResponse} returns this
 */
proto.xq.GetPostsResponse.prototype.setPostsList = function (value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};

/**
 * @param {!proto.xq.Post=} opt_value
 * @param {number=} opt_index
 * @return {!proto.xq.Post}
 */
proto.xq.GetPostsResponse.prototype.addPosts = function (opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(
    this,
    1,
    opt_value,
    proto.xq.Post,
    opt_index,
  );
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xq.GetPostsResponse} returns this
 */
proto.xq.GetPostsResponse.prototype.clearPostsList = function () {
  return this.setPostsList([]);
};

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.xq.StreamEventsRequest.repeatedFields_ = [2];

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.xq.StreamEventsRequest.prototype.toObject = function (
    opt_includeInstance,
  ) {
    return proto.xq.StreamEventsRequest.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.xq.StreamEventsRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.xq.StreamEventsRequest.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        userId: jspb.Message.getFieldWithDefault(msg, 1, 0),
        eventTypesList:
          (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xq.StreamEventsRequest}
 */
proto.xq.StreamEventsRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xq.StreamEventsRequest();
  return proto.xq.StreamEventsRequest.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xq.StreamEventsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xq.StreamEventsRequest}
 */
proto.xq.StreamEventsRequest.deserializeBinaryFromReader = function (
  msg,
  reader,
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {number} */ (reader.readUint64());
        msg.setUserId(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.addEventTypes(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xq.StreamEventsRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.xq.StreamEventsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xq.StreamEventsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xq.StreamEventsRequest.serializeBinaryToWriter = function (
  message,
  writer,
) {
  var f = undefined;
  f = message.getUserId();
  if (f !== 0) {
    writer.writeUint64(1, f);
  }
  f = message.getEventTypesList();
  if (f.length > 0) {
    writer.writeRepeatedString(2, f);
  }
};

/**
 * optional uint64 user_id = 1;
 * @return {number}
 */
proto.xq.StreamEventsRequest.prototype.getUserId = function () {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};

/**
 * @param {number} value
 * @return {!proto.xq.StreamEventsRequest} returns this
 */
proto.xq.StreamEventsRequest.prototype.setUserId = function (value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};

/**
 * repeated string event_types = 2;
 * @return {!Array<string>}
 */
proto.xq.StreamEventsRequest.prototype.getEventTypesList = function () {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};

/**
 * @param {!Array<string>} value
 * @return {!proto.xq.StreamEventsRequest} returns this
 */
proto.xq.StreamEventsRequest.prototype.setEventTypesList = function (value) {
  return jspb.Message.setField(this, 2, value || []);
};

/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.xq.StreamEventsRequest} returns this
 */
proto.xq.StreamEventsRequest.prototype.addEventTypes = function (
  value,
  opt_index,
) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};

/**
 * Clears the list making it empty but non-null.
 * @return {!proto.xq.StreamEventsRequest} returns this
 */
proto.xq.StreamEventsRequest.prototype.clearEventTypesList = function () {
  return this.setEventTypesList([]);
};

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.xq.StreamEvent.oneofGroups_ = [[2, 3]];

/**
 * @enum {number}
 */
proto.xq.StreamEvent.EventDataCase = {
  EVENT_DATA_NOT_SET: 0,
  POST: 2,
  USER: 3,
};

/**
 * @return {proto.xq.StreamEvent.EventDataCase}
 */
proto.xq.StreamEvent.prototype.getEventDataCase = function () {
  return /** @type {proto.xq.StreamEvent.EventDataCase} */ (
    jspb.Message.computeOneofCase(this, proto.xq.StreamEvent.oneofGroups_[0])
  );
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.xq.StreamEvent.prototype.toObject = function (opt_includeInstance) {
    return proto.xq.StreamEvent.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.xq.StreamEvent} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.xq.StreamEvent.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        eventType: jspb.Message.getFieldWithDefault(msg, 1, ""),
        post: (f = msg.getPost()) && proto.xq.Post.toObject(includeInstance, f),
        user: (f = msg.getUser()) && proto.xq.User.toObject(includeInstance, f),
        timestamp:
          (f = msg.getTimestamp()) &&
          google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.xq.StreamEvent}
 */
proto.xq.StreamEvent.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.xq.StreamEvent();
  return proto.xq.StreamEvent.deserializeBinaryFromReader(msg, reader);
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.xq.StreamEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.xq.StreamEvent}
 */
proto.xq.StreamEvent.deserializeBinaryFromReader = function (msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setEventType(value);
        break;
      case 2:
        var value = new proto.xq.Post();
        reader.readMessage(value, proto.xq.Post.deserializeBinaryFromReader);
        msg.setPost(value);
        break;
      case 3:
        var value = new proto.xq.User();
        reader.readMessage(value, proto.xq.User.deserializeBinaryFromReader);
        msg.setUser(value);
        break;
      case 4:
        var value = new google_protobuf_timestamp_pb.Timestamp();
        reader.readMessage(
          value,
          google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader,
        );
        msg.setTimestamp(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.xq.StreamEvent.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.xq.StreamEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.xq.StreamEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.xq.StreamEvent.serializeBinaryToWriter = function (message, writer) {
  var f = undefined;
  f = message.getEventType();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getPost();
  if (f != null) {
    writer.writeMessage(2, f, proto.xq.Post.serializeBinaryToWriter);
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(3, f, proto.xq.User.serializeBinaryToWriter);
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter,
    );
  }
};

/**
 * optional string event_type = 1;
 * @return {string}
 */
proto.xq.StreamEvent.prototype.getEventType = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.xq.StreamEvent} returns this
 */
proto.xq.StreamEvent.prototype.setEventType = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional Post post = 2;
 * @return {?proto.xq.Post}
 */
proto.xq.StreamEvent.prototype.getPost = function () {
  return /** @type{?proto.xq.Post} */ (
    jspb.Message.getWrapperField(this, proto.xq.Post, 2)
  );
};

/**
 * @param {?proto.xq.Post|undefined} value
 * @return {!proto.xq.StreamEvent} returns this
 */
proto.xq.StreamEvent.prototype.setPost = function (value) {
  return jspb.Message.setOneofWrapperField(
    this,
    2,
    proto.xq.StreamEvent.oneofGroups_[0],
    value,
  );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.xq.StreamEvent} returns this
 */
proto.xq.StreamEvent.prototype.clearPost = function () {
  return this.setPost(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xq.StreamEvent.prototype.hasPost = function () {
  return jspb.Message.getField(this, 2) != null;
};

/**
 * optional User user = 3;
 * @return {?proto.xq.User}
 */
proto.xq.StreamEvent.prototype.getUser = function () {
  return /** @type{?proto.xq.User} */ (
    jspb.Message.getWrapperField(this, proto.xq.User, 3)
  );
};

/**
 * @param {?proto.xq.User|undefined} value
 * @return {!proto.xq.StreamEvent} returns this
 */
proto.xq.StreamEvent.prototype.setUser = function (value) {
  return jspb.Message.setOneofWrapperField(
    this,
    3,
    proto.xq.StreamEvent.oneofGroups_[0],
    value,
  );
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.xq.StreamEvent} returns this
 */
proto.xq.StreamEvent.prototype.clearUser = function () {
  return this.setUser(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xq.StreamEvent.prototype.hasUser = function () {
  return jspb.Message.getField(this, 3) != null;
};

/**
 * optional google.protobuf.Timestamp timestamp = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.xq.StreamEvent.prototype.getTimestamp = function () {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(
      this,
      google_protobuf_timestamp_pb.Timestamp,
      4,
    )
  );
};

/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.xq.StreamEvent} returns this
 */
proto.xq.StreamEvent.prototype.setTimestamp = function (value) {
  return jspb.Message.setWrapperField(this, 4, value);
};

/**
 * Clears the message field making it undefined.
 * @return {!proto.xq.StreamEvent} returns this
 */
proto.xq.StreamEvent.prototype.clearTimestamp = function () {
  return this.setTimestamp(undefined);
};

/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.xq.StreamEvent.prototype.hasTimestamp = function () {
  return jspb.Message.getField(this, 4) != null;
};

/**
 * @enum {number}
 */
proto.xq.Visibility = {
  VISIBILITY_UNSPECIFIED: 0,
  PUBLIC: 1,
  HOME: 2,
  FOLLOWERS: 3,
  DIRECT: 4,
};

goog.object.extend(exports, proto.xq);
