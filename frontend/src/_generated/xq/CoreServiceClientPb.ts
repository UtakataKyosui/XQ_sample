/**
 * @fileoverview gRPC-Web generated client stub for xq
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v6.32.0
// source: xq/core.proto

/* eslint-disable */
// @ts-nocheck

import * as grpcWeb from "grpc-web";

import * as xq_core_pb from "../xq/core_pb"; // proto import: "xq/core.proto"

export class XQServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string };
  options_: null | { [index: string]: any };

  constructor(
    hostname: string,
    credentials?: null | { [index: string]: string },
    options?: null | { [index: string]: any },
  ) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options["format"] = "text";

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, "");
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorCreateUser = new grpcWeb.MethodDescriptor(
    "/xq.XQService/CreateUser",
    grpcWeb.MethodType.UNARY,
    xq_core_pb.CreateUserRequest,
    xq_core_pb.CreateUserResponse,
    (request: xq_core_pb.CreateUserRequest) => {
      return request.serializeBinary();
    },
    xq_core_pb.CreateUserResponse.deserializeBinary,
  );

  createUser(
    request: xq_core_pb.CreateUserRequest,
    metadata?: grpcWeb.Metadata | null,
  ): Promise<xq_core_pb.CreateUserResponse>;

  createUser(
    request: xq_core_pb.CreateUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: xq_core_pb.CreateUserResponse,
    ) => void,
  ): grpcWeb.ClientReadableStream<xq_core_pb.CreateUserResponse>;

  createUser(
    request: xq_core_pb.CreateUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: xq_core_pb.CreateUserResponse,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/xq.XQService/CreateUser",
        request,
        metadata || {},
        this.methodDescriptorCreateUser,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/xq.XQService/CreateUser",
      request,
      metadata || {},
      this.methodDescriptorCreateUser,
    );
  }

  methodDescriptorGetUser = new grpcWeb.MethodDescriptor(
    "/xq.XQService/GetUser",
    grpcWeb.MethodType.UNARY,
    xq_core_pb.GetUserRequest,
    xq_core_pb.GetUserResponse,
    (request: xq_core_pb.GetUserRequest) => {
      return request.serializeBinary();
    },
    xq_core_pb.GetUserResponse.deserializeBinary,
  );

  getUser(
    request: xq_core_pb.GetUserRequest,
    metadata?: grpcWeb.Metadata | null,
  ): Promise<xq_core_pb.GetUserResponse>;

  getUser(
    request: xq_core_pb.GetUserRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: xq_core_pb.GetUserResponse,
    ) => void,
  ): grpcWeb.ClientReadableStream<xq_core_pb.GetUserResponse>;

  getUser(
    request: xq_core_pb.GetUserRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: xq_core_pb.GetUserResponse,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/xq.XQService/GetUser",
        request,
        metadata || {},
        this.methodDescriptorGetUser,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/xq.XQService/GetUser",
      request,
      metadata || {},
      this.methodDescriptorGetUser,
    );
  }

  methodDescriptorCreatePost = new grpcWeb.MethodDescriptor(
    "/xq.XQService/CreatePost",
    grpcWeb.MethodType.UNARY,
    xq_core_pb.CreatePostRequest,
    xq_core_pb.CreatePostResponse,
    (request: xq_core_pb.CreatePostRequest) => {
      return request.serializeBinary();
    },
    xq_core_pb.CreatePostResponse.deserializeBinary,
  );

  createPost(
    request: xq_core_pb.CreatePostRequest,
    metadata?: grpcWeb.Metadata | null,
  ): Promise<xq_core_pb.CreatePostResponse>;

  createPost(
    request: xq_core_pb.CreatePostRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: xq_core_pb.CreatePostResponse,
    ) => void,
  ): grpcWeb.ClientReadableStream<xq_core_pb.CreatePostResponse>;

  createPost(
    request: xq_core_pb.CreatePostRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: xq_core_pb.CreatePostResponse,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/xq.XQService/CreatePost",
        request,
        metadata || {},
        this.methodDescriptorCreatePost,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/xq.XQService/CreatePost",
      request,
      metadata || {},
      this.methodDescriptorCreatePost,
    );
  }

  methodDescriptorGetPosts = new grpcWeb.MethodDescriptor(
    "/xq.XQService/GetPosts",
    grpcWeb.MethodType.UNARY,
    xq_core_pb.GetPostsRequest,
    xq_core_pb.GetPostsResponse,
    (request: xq_core_pb.GetPostsRequest) => {
      return request.serializeBinary();
    },
    xq_core_pb.GetPostsResponse.deserializeBinary,
  );

  getPosts(
    request: xq_core_pb.GetPostsRequest,
    metadata?: grpcWeb.Metadata | null,
  ): Promise<xq_core_pb.GetPostsResponse>;

  getPosts(
    request: xq_core_pb.GetPostsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: xq_core_pb.GetPostsResponse,
    ) => void,
  ): grpcWeb.ClientReadableStream<xq_core_pb.GetPostsResponse>;

  getPosts(
    request: xq_core_pb.GetPostsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: xq_core_pb.GetPostsResponse,
    ) => void,
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/xq.XQService/GetPosts",
        request,
        metadata || {},
        this.methodDescriptorGetPosts,
        callback,
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/xq.XQService/GetPosts",
      request,
      metadata || {},
      this.methodDescriptorGetPosts,
    );
  }
}
